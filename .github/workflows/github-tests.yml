name: GitHub Tests
on: [push]
jobs:
  Run-Tests:
    runs-on: ubuntu-latest
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo " The workflow is now ready to test your code on the runner."
      - name: Install Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          java-package: jdk
          architecture: x64
      - name: Run tests
        run: |
          sudo apt-get update
          sudo apt-get install openjfx xvfb
          ls ${{ github.workspace }}
          cd ${{ github.workspace }}
          wget --no-verbose https://download2.gluonhq.com/openjfx/18.0.2/openjfx-18.0.2_linux-x64_bin-sdk.zip
          mkdir javafx && cd javafx && unzip ../openjfx-18.0.2_linux-x64_bin-sdk.zip && cd ..
          cp bluej/build.properties.template bluej/build.properties
          sed -i "s:build_java_home=.*:build_java_home=$JAVA_HOME:" bluej/build.properties
          sed -i 's:openjfx_path=.*:openjfx_path=${{ github.workspace }}/javafx/javafx-sdk-18.0.2:' bluej/build.properties
          sed -i 's:openjfx_monocle_path=.*:openjfx_monocle_path=${{ github.workspace }}/javafx/javafx-sdk-18.0.2:' bluej/build.properties
          cd bluej && ant clean && ant update-version-number && ant ready-to-run && xvfb-run --auto-servernum ant test-headed && cd ../greenfoot && ant clean && ant update-version-number && ant ready-to-run && xvfb-run ant test && cd .. && bash check-copyright.sh
      - run: echo "This job's status is ${{ job.status }}."

#name: Github Installers
#on: [push]
#jobs:
  Build-Windows:
    runs-on: windows-latest
    steps:
       - name: Check out repository code
         uses: actions/checkout@v3
       - name: Install choco packages
         run: |
           choco install wixtoolset -r --no-progress
           choco install msys2 -r --no-progress
           choco install mingw -r --no-progress
           choco install openjdk17 -r --no-progress
           choco install sed -r --no-progress
           choco install wget -r --no-progress
       - name: Check install locations
         run: |
           dir C:/ProgramData/chocolatey/lib/mingw/tools/install/mingw64/bin
           dir 'C:/Program Files/'
           dir 'C:/Program Files (x86)/'
           dir 'C:/Program Files (x86)/WiX Toolset v3.11/bin'
       - name: Install JavaFX and build
         run: |
           cd ${{ github.workspace }}
           wget --no-verbose https://download2.gluonhq.com/openjfx/18.0.2/openjfx-18.0.2_windows-x64_bin-sdk.zip
           wget --no-verbose https://download2.gluonhq.com/openjfx/18.0.2/openjfx-18.0.2_monocle-windows-x64_bin-sdk.zip
           mkdir javafx && cd javafx && unzip ../openjfx-18.0.2_windows-x64_bin-sdk.zip && cd ..
           mkdir javafx-monocle && cd javafx-monocle && unzip ../openjfx-18.0.2_monocle-windows-x64_bin-sdk.zip && cd ..
           copy bluej/build.properties.template bluej/build.properties
           sed -i 's/build_java_home=.*/build_java_home=C:\/Program Files\/OpenJDK\/jdk-17.0.2/' bluej/build.properties
           sed -i 's/openjfx_path=.*/openjfx_path=D:\/a\/bjgf-test-actions\/bjgf-test-actions\/javafx\/javafx-sdk-18.0.2/' bluej/build.properties
           sed -i 's/openjfx_monocle_path=.*/openjfx_monocle_path=D:\/a\/bjgf-test-actions\/bjgf-test-actions\/javafx-monocle\/javafx-sdk-18.0.2/' bluej/build.properties
           sed -i 's/mingw_root=.*/mingw_root=C:\/ProgramData\/chocolatey\/lib\/mingw\/tools\/install\/mingw64/' bluej/build.properties
           sed -i 's/wix_bin=.*/wix_bin=C:\/Program Files (x86)\/WiX Toolset v3.11\/bin/' bluej/build.properties
           cd bluej && ant clean && ant update-version-number && ant windows
       - name: Archive Windows installers
         uses: actions/upload-artifact@v3
         with:
           name: installers
           path: |
             bluej/package/BlueJ-windows*.msi
             bluej/package/BlueJ-windows*.zip
  Build-Ubuntu:
    runs-on: ubuntu-latest
    steps:
       - name: Check out repository code
         uses: actions/checkout@v3
       - name: Install packages
         run: |
           sudo apt install fakeroot
           sudo apt install openjdk-17-jdk
       - name: Check install locations
         run: |
           ls /usr/lib/jvm/java-17-openjdk-amd64/
       - name: Install JavaFX and build
         run: |
           cd ${{ github.workspace }}
           wget --no-verbose https://download2.gluonhq.com/openjfx/18.0.2/openjfx-18.0.2_linux-x64_bin-sdk.zip
           mkdir javafx && cd javafx && unzip ../openjfx-18.0.2_linux-x64_bin-sdk.zip && cd ..
           cp bluej/build.properties.template bluej/build.properties
           sed -i 's:build_java_home=.*:build_java_home=/usr/lib/jvm/java-17-openjdk-amd64:' bluej/build.properties
           sed -i 's:openjfx_path=.*:openjfx_path=${{ github.workspace }}/javafx/javafx-sdk-18.0.2:' bluej/build.properties
           sed -i 's:openjfx_monocle_path=.*:openjfx_monocle_path=${{ github.workspace }}/javafx/javafx-sdk-18.0.2:' bluej/build.properties
           cd bluej && ant clean && ant update-version-number && fakeroot ant debian
       - name: Archive Ubuntu installers
         uses: actions/upload-artifact@v3
         with:
           name: installers
           path: |
             bluej/package/BlueJ-linux*.deb
             bluej/package/BlueJ-generic*.jar
             bluej/package/BlueJ-source*.zip

  Build-Mac:
    runs-on: macos-latest
    steps:
       - name: Check out repository code
         uses: actions/checkout@v3
       - name: Install Java
         uses: actions/setup-java@v3
         with:
           distribution: 'temurin'
           java-version: '17'
           java-package: jdk
           architecture: x64
       - name: Install packages
         run: |
            cd ${{ github.workspace }}
            brew install xz
            wget --no-verbose https://github.com/phracker/MacOSX-SDKs/releases/download/11.3/MacOSX10.12.sdk.tar.xz
            xz -d MacOSX*.tar.xz
            tar -xf MacOSX*.tar
       - name: Check install locations
         run: |
           ls $JAVA_HOME
       - name: Install JavaFX and build
         run: |
           cd ${{ github.workspace }}
           wget --no-verbose https://download2.gluonhq.com/openjfx/18.0.2/openjfx-18.0.2_osx-x64_bin-sdk.zip
           mkdir javafx && cd javafx && unzip ../openjfx-*.zip && cd ..
           cp bluej/build.properties.template bluej/build.properties
           sed -i '.bak' "s:build_java_home=.*:build_java_home=$JAVA_HOME:" bluej/build.properties
           sed -i '.bak' "s:mac_bundled_jdk_path=.*:mac_bundled_jdk_path=$JAVA_HOME/../..:" bluej/build.properties
           sed -i '.bak' 's:openjfx_path=.*:openjfx_path=${{ github.workspace }}/javafx/javafx-sdk-18.0.2:' bluej/build.properties
           sed -i '.bak' 's:openjfx_monocle_path=.*:openjfx_monocle_path=${{ github.workspace }}/javafx/javafx-sdk-18.0.2:' bluej/build.properties
           # TODO make this a property:
           sed -i '.bak' 's:/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk:${{ github.workspace}}/MacOSX10.12.sdk:' bluej/package/macfiles/nativelauncher/compile.sh
           cd bluej && ant clean && ant update-version-number && ant mac && cd ..
           # We don't need this installer:
           rm bluej/package/BlueJ-mac-legacy*zip
       - name: Archive Mac installers
         uses: actions/upload-artifact@v3
         with:
           name: installers
           path: |
             bluej/package/BlueJ-mac*.zip

     
